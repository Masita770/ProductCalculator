<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.ProductMapper">

    <select id="stockAll" resultType="com.example.domain.Stocks">
        SELECT * FROM stocks
    </select>

<!--    <select id="selectAll" resultMap="stockMap">-->
    <select id="selectAll" resultMap="stockMap">
<!--        SELECT * FROM products INNER JOIN stocks ON products.id = stocks.product_id-->
        SELECT products.id, products.p_number, products.product, products.price, stocks.product_id FROM products  INNER JOIN stocks ON products.id = stocks.product_id
    </select>

    <select id="selectOne" resultMap="stockMap">
        SELECT id, p_number, product, category, price, registration_date, deleted_date FROM products WHERE id = #{id}
<!--        SELECT products.id, products.p_number, products.product, products.price, stocks.product_id, orders.stocks_id, orders.orders_number FROM products INNER JOIN stocks ON products.id = stocks.product_id-->
<!--        INNER JOIN orders ON stocks.product_id = orders.stocks_id WHERE orders.stocks_id = #{stocksId}-->
    </select>
    <insert id="requestAdd" useGeneratedKeys="true" keyProperty="id">
<!--        INSERT into products (id, p_number, product, category, price) values (#{id}, #{pNumber}, #{category}, #{price})-->
        INSERT into orders(id, stocks_id, orders_number, order_date, delivery_date) values (#{id}, #{stocksId}, #{ordersNumber}, #{orderDate}, #{deliveryDate})
    </insert>
    <update id="update">
        UPDATE products set p_number = #{pNumber}, product = #{product}, category = #{category}, price = #{price} where id = #{id}
    </update>
    <delete id="delete">
        DELETE FROM products WHERE id = #{id}
    </delete>

    <select id="orderAll" resultMap="stockMap">
<!--        SELECT * FROM products INNER JOIN -->
        SELECT
            products.id, products.p_number, products.product, products.price, stocks.product_id,
            orders.id, orders.stocks_id
        FROM products
        INNER JOIN stocks ON
            products.id = stocks.product_id
        INNER JOIN orders ON
            stocks.id = orders.stocks_id
    </select>

    <resultMap type="com.example.domain.Products" id="stockMap">
        <id property="id" column="id" />
        <result property="pNumber" column="p_number" />
        <result property="product" column="product" />
        <result property="category" column="category" />
        <result property="price" column="price" />
        <association property="stockList" resultMap="stock" />
        <!--        <collection property="stockList" resultMap="stock" foreignColumn="product_id" />-->
    </resultMap>
    <resultMap type="com.example.domain.Stocks" id="stock" >
        <id property="id" column="id" />
        <result property="productId" column="product_id" />
        <result property="inventory" column="inventory" />
        <result property="updateDate" column="update_date" />
        <association property="orderList" resultMap="order" />
    </resultMap>
        <resultMap id="order" type="com.example.domain.Orders">
            <id property="id" column="id" />
            <result property="stocksId" column="stocks_id" />
            <result property="ordersNumber" column="orders_number" />
            <result property="orderDate" column="order_date" />
            <result property="deliveryDate" column="delivery_date" />
        </resultMap>
</mapper>